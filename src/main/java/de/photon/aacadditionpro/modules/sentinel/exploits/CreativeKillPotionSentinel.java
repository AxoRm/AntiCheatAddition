package de.photon.aacadditionpro.modules.sentinel.exploits;

import de.photon.aacadditionpro.ServerVersion;
import de.photon.aacadditionpro.modules.ModuleLoader;
import de.photon.aacadditionpro.util.messaging.DebugSender;
import org.bukkit.Material;
import org.bukkit.event.EventHandler;
import org.bukkit.event.entity.PotionSplashEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.PotionMeta;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.jetbrains.annotations.NotNull;

public class CreativeKillPotionSentinel extends IllegalItemSentinel
{
    public CreativeKillPotionSentinel()
    {
        super("Exploits.CreativeKillPotion");
    }

    @Override
    protected ModuleLoader createModuleLoader()
    {
        return ModuleLoader.builder(this)
                           // Potions are much different in 1.8.8
                           .setAllowedServerVersions(ServerVersion.NON_188_VERSIONS)
                           .build();
    }

    @Override
    boolean isIllegalStack(@NotNull ItemStack stack)
    {
        DebugSender.getInstance().sendDebug(stack.toString(), true, false);
        DebugSender.getInstance().sendDebug(String.valueOf(stack.getItemMeta()), true, false);
        DebugSender.getInstance().sendDebug(String.valueOf((PotionMeta) stack.getItemMeta()), true, false);

        return (stack.getType() == Material.POTION || stack.getType() == Material.SPLASH_POTION) &&
               // TODO: This does not work, then mirror to TrollPotion.
               ((PotionMeta) stack.getItemMeta()).getCustomEffects().stream().anyMatch(this::isCreativeKillPotion);
    }

    @EventHandler(ignoreCancelled = true)
    public void onPotionSplash(PotionSplashEvent event)
    {
        // Disable any thrown potions.
        if (event.getPotion().getEffects().stream().anyMatch(this::isCreativeKillPotion)) event.setCancelled(true);
    }

    private boolean isCreativeKillPotion(PotionEffect effect)
    {
        return effect.getType() == PotionEffectType.HEAL && effect.getAmplifier() > 120;
    }
}
