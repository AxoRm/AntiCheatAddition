# ------------------------------------------------------------------------------------------------------------------- #
#                               _____               _      _  _  _    _                _____                          #
#              /\        /\    / ____|    /\       | |    | |(_)| |  (_)              |  __ \                         #
#             /  \      /  \  | |        /  \    __| |  __| | _ | |_  _   ___   _ __  | |__) |_ __  ___               #
#            / /\ \    / /\ \ | |       / /\ \  / _` | / _` || || __|| | / _ \ | '_ \ |  ___/| '__|/ _ \              #
#           / ____ \  / ____ \| |____  / ____ \| (_| || (_| || || |_ | || (_) || | | || |    | |  | (_) |             #
#          /_/    \_\/_/    \_\\_____|/_/    \_\\__,_| \__,_||_| \__||_| \___/ |_| |_||_|    |_|   \___/              #
#                                                                                                                     #
#                           __  __         _       _           ___ _        _                                         #
#                          |  \/  |__ _ __| |___  | |__ _  _  | _ \ |_  ___| |_ ___ _ _                               #
#                          | |\/| / _` / _` / -_) | '_ \ || | |  _/ ' \/ _ \  _/ _ \ ' \                              #
#                          |_|  |_\__,_\__,_\___| |_.__/\_, | |_| |_||_\___/\__\___/_||_|                             #
#                                                       |__/                                                          #
# ------------------------------------------------------------------------------------------------------------------- #

# ------------------------------------------------------------------------------------------------------------------- #
#                                           _      _    _ _ _   _                                                     #
#                                          /_\  __| |__| (_) |_(_)___ _ _  ___                                        #
#                                         / _ \/ _` / _` | |  _| / _ \ ' \(_-<                                        #
#                                        /_/ \_\__,_\__,_|_|\__|_\___/_||_/__/                                        #
#                                                                                                                     #
# ------------------------------------------------------------------------------------------------------------------- #

# BrandHider allows you to modify the brand that is shown in the debug screen of minecraft.
# This can be useful if you want to create a custom message or just hide your actual setup.
BrandHider:
  # Do you want to enable BrandHider?
  enabled: false
  # This is the replacement text for the brand.
  # You can use the character & for color codes and all placeholders that are available in normal checks
  brand: "Some Spigot"
  # If you want to display attributes that update over time, e.g. TPS, Ping, Time or Date this will update the values
  # in the defined interval.
  # Set to 0 to disable the refreshing (recommended if you only use static text or placeholders that do not change)
  # Measured in ticks
  refresh_rate: 0

# This will spoof the health of all players on your server so that DamageIndicators (and any other mod to that tries
# to show other players' health, like HealthTags and ESP) becomes useless.
# This is a clientside spoof, meaning that your plugins are able to get the correct health.
DamageIndicator:
  # Do you want to enable DamageIndicator?
  enabled: true
  # Spoof the health of the following entity categories.
  spoof:
    animals: false
    monsters: true
    players: true

# Various resource packs allow displaying enchantment information that a normal player would not be able to see, i.e.
# the type and level of any enchantment.
# EnchantmentHider replaces all enchantments in packets sent to a player with infinity, therefore obfuscating the
# actual enchantments. Normal players can still see the enchantment glow, but players using ESP or texture packs will
# not see any additional information.
EnchantmentHider:
  # Do you want to enable EnchantmentHider?
  enabled: true
  # Spoof the health of the following entity categories.
  # Please note that spoofing all enchantments might cause performance issues if you use a custom mob equipment system.
  spoof:
    players: true
    others: false

# This module uses advanced mathematics to determine if players can see each other.
# If the players cannot see each other several actions will be taken to hide information on packet-level.
# Due to abysmal performance of block lookups on newer minecraft versions 1.13+ ESP does no longer actually check the
# entire distance between two players. Instead, it will use a heuristic to check the most relevant blocks. This can
# lead to players being shown even though they are not visible.
#
# MAIN FUNCTIONS:
# - Sneaking-Hider:  A sneaking player who cannot be directly seen by another player will be completely hidden from
#                    the second player. (This will make esp / tracers / radar / similar useless if the player who
#                    is supposed to be shown is sneaking)
#
# - Equipment-Hider: If a player cannot be directly seen by another player his equipment (hand, armour) will be hidden
#                    from the observer. (This will make the life of cheaters harder because they cannot properly
#                    estimate the combat strength of a player)
#                    This part will automatically disable itself on servers with MC versions below 1.11.
Esp:
  # Do you want to enable anti - ESP?
  #
  # If your server has a lot of players in one world within its render distance the ESP check will create a medium to
  # high CPU load.
  #
  # If you create new worlds make sure to restart your server to make ESP cover the new worlds.
  enabled: false
  # How many ticks shall be waited between two ESP cycles. Setting this too low may result in performance issues,
  # setting it too high may result in players being hidden too long and popping up.
  interval_ticks: 2
  # This determines whether minecraft's 3rd person modes should be considered for calculation as well.
  # Disabling this will reduce the required number of block queries by two thirds.
  # Especially useful if you have games in which players are not supposed to use the third person mode.
  calculate_third_person_modes: false

# This automatically deletes old log files of both AAC and AACAdditionPro
# It activates automatically on restart and after that in a 12-hour cycle.
LogBot:
  # Do you want to enable LogBot?
  enabled: false
  # After how many days should AACAdditionPro logs be deleted
  # Set to -1 to disable
  AACAdditionPro: 10
  # After how many days should server logs be deleted
  # Set to -1 to disable
  Server: 10

# ------------------------------------------------------------------------------------------------------------------- #
#                                               ___ _           _                                                     #
#                                              / __| |_  ___ __| |__ ___                                              #
#                                             | (__| ' \/ -_) _| / /(_-<                                              #
#                                              \___|_||_\___\__|_\_\/__/                                              #
#                                                                                                                     #
# ------------------------------------------------------------------------------------------------------------------- #

# This check detects AutoEat bots that will automatically eat for a player with perfect timing.
# Please note that one VL from AutoEat decays only every 5 minutes to make sure that cheats can be detected even if
# eating sessions are several minutes apart.
# Adds 20 vl.
AutoEat:
  # Do you want to enable the AutoEat check?
  enabled: true
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player has bot-like eating behaviour"
  # Violation before AACAdditionPro starts to cancel the consume events.
  # Set this to 0 to never cancel the events.
  cancel_vl: 80
  # After a detection which surpasses cancel_vl AACAdditionPro cancels all attempts to consume an item for the
  # duration of timeout (in milliseconds).
  timeout: 5000
  # Map of violation levels to command
  thresholds:
    60: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for AutoEat"
    120: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is highly suspected for AutoEat"
    200: "kick {player} AutoEat"

# AutoFish detects cheats that are named just like the check - automatic fishing bots which can yield a lot of
# treasure and food for those who use them.
#
# If you have modified fishing time and/or behaviour please test if this check is compatible with your setup.
# This check does only work on minecraft versions 1.11 and beyond due to changes in the spigot API compared to older
# versions and auto-disables itself accordingly.
AutoFish:
  # This message will appear in AAC's status when AAC hooking is used.
  aac_status_message: "[AACAdditionPro] Player has bot-like fishing behaviour"
  # Violation before AACAdditionPro starts to cancel the fishing.
  # Please think of potential luck, because of this I do not recommend setting this to a value smaller than 7.
  # Set this to 0 to never cancel fishing.
  cancel_vl: 100
  # Control the different parts of AutoFish
  parts:
    # The inhuman reaction part recognizes very fast reaction speeds to detect AutoFishing mods.
    # This might cause some false positives with experienced fishers.
    # Adds up to 60 vl, depending on the reaction speed.
    inhuman_reaction:
      # Do you want to enable the inhuman reaction part?
      enabled: true
      # This message will appear in AAC's status when AAC is used.
      aac_status_message: "[AACAdditionPro] The player's fishing reaction times are inhumanly fast."
      # How many milliseconds should have passed before a fishing action counts as legit.
      # This also influences the given vl according to a linear distribution - the faster and more inhuman someone
      # reacts, the more vl they will get.
      human_reaction_time: 145.0
    # The consistency part recognizes unchanging times between a successful catch and fishing again as simple bots have
    # constant reaction times, whereas human players' reaction varies a little each time they fish.
    # Depending on how accurate the consistency is players will receive between 1 and 160 vl.
    consistency:
      # Do you want to enable the consistency part?
      enabled: true
      # This message will appear in AAC's status when AAC is used.
      aac_status_message: "[AACAdditionPro] The player's fishing times are inhumanly constant."
      # How many fishing attempts should be checked by the consistency check
      fishing_attempt_count: 5
      # The minimum variation a player has to have in their reaction times to count as non-cheating (in milliseconds)
      min_variation: 30
      # After how many failed attempts to fish between two successful attempts should a player be exempted from the
      # consistency part?
      #
      # This is a countermeasure for afk fishing farm false positives.
      # Do not extensively lower this value because bots with a custom fail-rate might not be detected.
      #
      # If you do not allow afk fishing farms on your server set this to 0.
      # Values
      maximum_fails: 12
  # Map of violation levels to command
  thresholds:
    90: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for AutoFish"
    140: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is highly suspected for AutoFish"
    200: "kick {player} AutoFish"

# AutoPotion detects automated bots which splash the player with potions, e.g. when player health is low.
# This check does only work on minecraft versions 1.11 and beyond and auto-disables itself on other versions.
# Adds 50 vl.
AutoPotion:
  # Do you want to enable the AutoPotion check?
  enabled: true
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player applies splash potions suspiciously"
  # Violation before AACAdditionPro starts to cancel throwing potions.
  # Set this to 0 to never cancel throwing potions.
  cancel_vl: 2
  # After a detection which surpasses cancel_vl AACAdditionPro cancels all potion throws to effectively prevent the
  # cheat (in milliseconds)
  timeout: 1000
  # How fast the player must look in the initial direction once again to be regarded as having bot-like reaction speed
  # (in milliseconds).
  look_restored_time: 150
  # When looking back, beyond what angle difference should someone be considered as legit?
  angle_offset: 5
  # How much someone has to suddenly look down to start the check (in degrees)
  initial_pitch_difference: 40
  # The minimum angle, measured in degrees, that is counted as looking down
  # Negative values represent looking upwards in Spigot and will break the check
  # It is strongly recommended to test value changes as they have a huge impact on the check
  look_down_angle: 80
  # Map of violation levels to command
  thresholds:
    50: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for AutoPotion"
    100: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is highly suspected for AutoPotion"
    200: "kick {player} AutoPotion"

# The Fastswitch check prevents players from switching their hotbar-selection too quickly which can detect some
# killauras or scaffolds.
# The check will automatically disable itself if the server is lagging.
# Adds 25 vl.
Fastswitch:
  # Do you want to enable the Fastswitch check?
  enabled: true
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player switches hotbar selection too quickly"
  # Violation before AACAdditionPro starts to cancel the hotbar selections.
  # Set this to 0 to never cancel hotbar selections.
  cancel_vl: 50
  # If a player has a ping higher than this value he bypasses the check
  # Please make sure that you have some pingspoof protection enabled while using this feature
  # Set this to -1 to disable
  max_ping: 400
  # The minimum time between switches that are not considered scrolling (in milliseconds)
  switch_milliseconds: 50
  # Map of violation levels to command
  thresholds:
    30: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for Fastswitch"
    100: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is highly suspected for Fastswitch"
    200: "kick {player} Fastswitch"

# ImpossibleChat check detects sending chat messages while being in an inventory, blocking, sprinting and other illegal
# situations.
# Adds 25 vl.
ImpossibleChat:
  # Do you want to enable the ImpossibleChat check?
  # Disabled by default as some servers might allow auto-chat modifications.
  enabled: false
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player chats while being in an inventory."
  # Violation before AACAdditionPro starts to cancel the messages.
  # Set this to 0 to never cancel messages.
  cancel_vl: 75
  # Map of violation levels to command
  thresholds:
    50: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for ImpossibleChat"
    100: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is highly suspected for ImpossibleChat"
    200: "kick {player} ImpossibleChat"

# This check monitors inventory interactions of players.
Inventory:
  # Do you want to enable the Inventory check?
  enabled: true
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player has suspicious inventory interactions"
  # Control the different parts of Inventory
  parts:
    # This part detects bot-like behaviour with constant times between inventory clicks.
    # This is supposed to detect simple chest stealer bots which do not randomize the click delays.
    # NOTE: If you allow inventory sorting mods of any kind make sure to disable this part.
    #
    # This part will add 20-70 vl (this check is quite slow and is only processed every 16 clicks on items) depending on
    # the amount of misclicks and the time between. This will ensure that players which click excessively fast - e.g. in
    # the beginning of SurvivalGames will not get as many vls as they click on a lot of empty slots. Slow clicking
    # also results in less vl as a slow click rate does not give you a huge advantage and is likely a false positive.
    AverageHeuristic:
      # Do you want to enable the AverageHeuristic part?
      enabled: true
      # If a player has a ping higher than this value he bypasses the check
      # Please make sure that you have some pingspoof protection enabled if you use this feature
      # Set this to -1 to disable
      max_ping: 400
      # The minimum TPS the server must have to activate this check
      # Low TPS will cause an extreme amount of false positives.
      min_tps: 18.5
    # This part flags hitting while the inventory is open.
    # This part will add 20 vl.
    Hit:
      # Do you want to enable the Hit part?
      enabled: true
      # Violation before AACAdditionPro starts to cancel the hits.
      # Set this to 0 to never cancel hits.
      cancel_vl: 60
    # The move part detects movement when a player is still in his inventory.
    # This part will add 5 vl when a player moves illegally and 20 vl when a player jumps illegally.
    Move:
      # Do you want to enable the Move part?
      enabled: true
      # Violation before AACAdditionPro starts to cancel the movement.
      # Set this to 0 to never cancel movement.
      cancel_vl: 60
      # The minimum TPS the server must have to activate this check
      # Low TPS will cause an extreme amount of false positives.
      min_tps: 19.5
      # This is the time in milliseconds in which AACAdditionPro will not check a player after a teleport.
      # Increase this if you have false positive with high-ping players after teleports.
      # Please note that the definition of teleport is quite broad, including e.g. ender pearls, teleport commands,
      # respawns, etc.
      teleport_bypass_time: 900
      # Analogous to the option above this only applies to world changes which usually take more time to process.
      world_change_bypass_time: 2000
      # This allows to add more lenience on servers with very high-ping players by stretching the no-punish time after
      # opening an inventory (in milliseconds).
      # Normal connections are already covered by the default values and are internally exempt for 240ms.
      lenience_millis: 0
    # The MultiInteraction part prevents players from moving items too fast.
    # This part will add 1 to 8 vl, depending on the severity of the violation.
    MultiInteraction:
      # Do you want to enable the MultiInteraction part?
      enabled: true
      # Violation before AACAdditionPro starts to cancel the inventory interactions.
      # Set this to 0 to never cancel interacts.
      cancel_vl: 25
      # If a player has a ping higher than this value he bypasses the check
      # Please make sure that you have some pingspoof protection enabled if you use this feature
      # Set this to -1 to disable
      max_ping: 400
      # The minimum TPS the server must have to activate this check
      # Low TPS will cause an extreme amount of false positives.
      min_tps: 18.5
    # This part will detect perfectly closed inventories to detect chest stealers which automatically close an inventory
    # once it is empty.
    # This part will add 20 to 40 vl depending on the severity of the violation.
    PerfectExit:
      # Do you want to enable the PerfectExit part?
      enabled: true
      # The minimum TPS the server must have to activate this check
      # Low TPS will cause an extreme amount of false positives.
      min_tps: 18.5
      # How many suspicious interactions should Inventory count as legit?
      # The value must be greater or equal to 0.
      violation_threshold: 5
    # The rotation part detects head movement while having an open inventory.
    # This part will add 1 vl.
    Rotation:
      # Do you want to enable the Rotation part?
      enabled: true
      # This is the time in milliseconds in which AACAdditionPro will not check a player after a teleport.
      # Increase this if you have false positive with high-ping players after teleports.
      # Please note that the definition of teleport is quite broad, including e.g. ender pearls, teleport commands,
      # respawns, etc.
      teleport_bypass_time: 900
      # Analogous to the option above this only applies to world changes which usually take more time to process.
      world_change_bypass_time: 2000
    # This part detects inventory interactions while a player is sprinting or sneaking.
    # This part will add 30 vl.
    Sprinting:
      # Do you want to enable the Sprinting part?
      enabled: true
      # Violation before AACAdditionPro starts to cancel the inventory interactions.
      # Set this to 0 to never cancel inventory interactions.
      cancel_vl: 110
  # Map of violation levels to command
  thresholds:
    110: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for inventory cheats."
    160: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is highly suspected for inventory cheats."
    200: "kick {player} Inventory cheats."

# PacketAnalysis is a general check which aims to detect some modifications that are closely linked to interfering with
# the protocol directly, such as derp, freecam, killauras, aimbots and other rotation-based modules.
PacketAnalysis:
  # Do you want to enable the PacketAnalysis?
  enabled: true
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player has suspicious packet behaviour"
  # Control the different parts of PacketAnalysis
  parts:
    # This part checks if after an attack the client sends an arm animation packet.
    # This only flags the worst killauras.
    # This part will add 30 vl.
    Animation:
      # Do you want to enable the Animation part?
      enabled: true
    # EqualRotation checks for invalid rotation packets which have the rotation of the last packet as content
    # This will catch several scaffold, tower, killaura and aimbot modifications.
    # Adds 5 vl
    EqualRotation:
      # Do you want to enable the EqualRotation part?
      enabled: true
    # This checks for illegal pitches that a legit client is not able to send.
    # This part will add 150 vl.
    IllegalPitch:
      # Do you want to enable the IllegalPitch part?
      enabled: true
  # Map of violation levels to command
  thresholds:
    110: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected by PacketAnalysis"
    160: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is highly suspected by PacketAnalysis"
    200: "kick {player} Suspicious packets"

# Pingspoof tries to detect modifications that trick the server into believing the player has a higher or lower ping
# than they actually have to partially bypass anticheats or get other advantages.
# Adds up to 70 vl, depending on the severity of the violation.
Pingspoof:
  # Do you want to enable the Pingspoof check?
  enabled: true
  # This message will appear in AAC's status when AAC hooking is used.
  aac_status_message: "[AACAdditionPro] Player tries to spoof their ping"
  # How much is the player ping allowed to deviate from the tested ping (measured in ms)?
  ping_leniency: 150
  # How often should the ping be checked?
  # Measured in seconds.
  interval: 30
  # Map of violation levels to command
  thresholds:
    60: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for Pingspoof"
    140: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is highly suspected for Pingspoof"
    200: "kick {player} Pingspoof"

# The Scaffold check detects Scaffold cheats
Scaffold:
  # Do you want to enable the Scaffold check?
  enabled: true
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player scaffolds suspiciously"
  # Violation before AACAdditionPro starts to cancel block placement.
  # Set this to 0 to never cancel block placement.
  cancel_vl: 110
  # After a detection which surpasses cancel_vl AACAdditionPro cancels all attempts to place a block in the given
  # time window to prevent further scaffolding (in milliseconds)
  timeout: 1000
  # Control the different parts of Scaffold
  parts:
    # This part detects suspicious angles when the player places blocks.
    # Adds 15 vl.
    Angle:
      # Do you want to enable Angle?
      enabled: true
      # How many suspicious angles should Scaffold count as legit?
      # The value must be greater or equal to 0.
      violation_threshold: 3
    # The main part of Scaffold preventing too fast Scaffolding
    # This part is always enabled as it provides the basic framework.
    # The average part might add between 20 and 130 violation levels depending on the severity of the violation.
    Average:
      # The minimum delay between block placements that will be enforced by AACAdditionPro (in milliseconds)
      delays:
        # This delay applies to all straight building techniques
        normal: 238
        # Constants used for building techniques which include sneaking
        sneaking_addition: 30
        sneaking_slow_addition: 40
        # This delay applies to diagonal building
        diagonal: 138
    # This prevents jumping while scaffolding, which, even though theoretically possible, is extremely difficult
    # and unstable to achieve without having a scaffold cheat.
    # Adds 20 vl.
    Jumping:
      # Do you want to enable Jumping?
      enabled: true
      # How many suspicious jumps should Scaffold count as legit
      # The value must be greater or equal to 0.
      violation_threshold: 4
    # This part detects suspicious placement positions.
    # Adds 30 vl.
    Position:
      # Do you want to enable Position?
      enabled: true
    # This part analyzes the rotations of a player while scaffolding
    Rotation:
      # This checks the player's rotation's derivative.
      # Adds 10 vl.
      Derivative:
        # Do you want to enable Derivative?
        enabled: true
      # FastChange checks if a player has frequent, sudden spikes in their looking direction.
      # This module can detect combinations of Killaura and Scaffold especially fast.
      # Adds 15 vl.
      FastChange:
        # Do you want to enable FastChange?
        enabled: true
      # This checks the player's rotation's second derivative.
      # Adds 5 vl.
      SecondDerivative:
        # Do you want to enable SecondDerivative?
        enabled: true
      # How many suspicious rotations should Scaffold count as legit
      # The value must be greater or equal to 0.
      violation_threshold: 6
    # This checks for behaviour associated with safe-walk
    Safewalk:
      # What types of this part should be enabled
      # Disabling all types will disable the part.
      # Position will add 15 vl
      Position:
        # Do you want to enable Safewalk Position?
        enabled: true
        # How many suspicious positions should Scaffold count as legit?
        # The value must be greater or equal to 0.
        violation_threshold: 3
      # Timing will add 20 vl
      Timing:
        # Do you want to enable Safewalk Timing?
        enabled: true
        # How many suspicious positions should Scaffold count as legit?
        # The value must be greater or equal to 0.
        violation_threshold: 2
    # This part detects sprinting between block placements.
    # The sprinting check always adds 45 vl.
    Sprinting:
      # Do you want to enable Sprinting?
      enabled: true
      # How many suspicious sprinting periods should Scaffold count as legit?
      # This is needed as sprinting can be perfectly legit e.g. when starting to place blocks.
      # The value must be greater or equal to 0.
      violation_threshold: 4
  # Map of violation levels to command
  thresholds:
    90: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for Scaffold"
    130: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is highly suspected for Scaffold"
    200: "kick {player} Scaffold"

# Skinblinker detects cheats of the same name when the player sprints/sneaks.
Skinblinker:
  # Do you want to enable the Skinblinker check?
  enabled: true
  # Control the different parts of Skinblinker
  parts:
    # This flags settings packets that are sent while sprinting or sneaking which is not possible to do in the game.
    # Adds 50 vl.
    Sprinting:
      # Do you want to enable Sprinting?
      enabled: true
    # The current protocol has an unused bit in the skin packet that is often toggled by skinblinkers.
    # Please note that some custom clients might use this bit which can lead to false positives.
    UnusedBit:
      # Do you want to enable UnusedBit?
      enabled: true
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player changes skin parts while actively moving"
  # Map of violation levels to command
  thresholds:
    100: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for Skinblinker"
    200: "kick {player} Skinblinker"

# This check tries to alert you of teamers
# This is safe to enable, just make sure that you configure this check for your own needs.
Teaming:
  # Do you want to enable the Teaming check?
  enabled: false
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player might be teaming"
  # The VL of the player is multiplied with this constant to get the score of the player used by AAC.
  aac_score_multiplier: 10
  # How much delay should be between the check-waves
  # This must be below 15000 milliseconds.
  # Measured in milliseconds.
  delay: 5000
  # How far in blocks should players at most be away to count as teaming
  proximity_range: 4.5
  # If you only want to allow teams with a certain member-cap you can change this value appropriately.
  # Setting it to 1 flags all teams.
  allowed_size: 1
  # Non-pvp time to count as teaming
  # Measured in milliseconds.
  no_pvp_time: 6000
  # This contains all worlds the check should be enabled in.
  enabled_worlds:
    - "world"
  # Here you can define zones in which the check should not be run
  # An entry is formatted as following:
  # - "<affected_world> <x1> <z1> <x2> <z2>"
  safe_zones:
    - "world -15 -15 15 15"
  # These ViolationLevel are cumulative for a team.
  # That means that every team member gets (actual team size) - (allowed team size) vl per interval.
  thresholds:
    4: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} may be Teaming"
    10: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} are suspected for Teaming"
    15: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} are highly suspected for Teaming"

# The Tower check detects cheats of the same name, modifications which allow you to build straight up (towering)
# very fast.
# Adds up to 1000 vl depending on the severity of the violation.
Tower:
  # Do you want to enable the Tower check?
  enabled: true
  # This message will appear in AAC's status when AAC is used.
  aacfeatureinfo: "[AACAdditionPro] Player builds a tower too fast"
  # Violation before AACAdditionPro starts to cancel the block placements.
  # Set this to 0 to never cancel block placement.
  cancel_vl: 6
  # If you have false positives decrease this SLIGHTLY.
  # The Tower check has its own leniency-curve which makes it very effective.
  # Therefore, please only touch this if you have false positives.
  tower_leniency: 1
  # Special leniency which is only applied if the player has the levitation effect
  levitation_leniency: 0.95
  # After a detection which surpasses cancel_vl AACAdditionPro cancels all block placements in the given timeframe
  # to prevent further towering (in milliseconds)
  timeout: 6000
  # Map of violation levels to command
  thresholds:
    80: "<YOUR_STAFFCHAT_COMMAND> {player} in {world} is suspected for Tower"
    200: "kick {player} Tower"

# ------------------------------------------------------------------------------------------------------------------- #
#                                            ___          _   _          _                                            #
#                                           / __| ___ _ _| |_(_)_ _  ___| |                                           #
#                                           \__ \/ -_) ' \  _| | ' \/ -_) |                                           #
#                                           |___/\___|_||_\__|_|_||_\___|_|                                           #
#                                                                                                                     #
# ------------------------------------------------------------------------------------------------------------------- #


# Sentinel watches over your server detecting mods and sometimes certain cheat clients on join without false detections.
# Also, it tries to identify various exploits and illegal items that are safe to ban.
# It does so by listening for certain messages that clients and mods can send over channels invisible to the user.
# You can define your own checks in the listening section.
Sentinel:
  # If AAC's feature system is used every detection will show up as with this score in AAC's status.
  AACFeatureScore: 100

  # Sentinel tries to identify and prevent various exploits on your server.
  # These are usually safe to ban automatically.
  Exploits:
    # Even if you have command blocks disabled on your server (as you should), it might be good to know (and ban)
    # players that used some exploit to get a command block. This will also delete any command blocks found in the
    # player's inventory.
    CommandBlock:
      # Do you want to enable the CommandBlock exploit detection?
      enabled: true
      # What commands will be executed if the mod is detected.
      # Automatic banning can be considered.
      commands:
        - "kick {player} Command block."

    # Various cheat clients allow for the creation of "creative kill potions", exploiting a bug in Minecraft in which
    # high instant health potion effects kill a player. Moreover, equally high instant damage potions can kill any
    # undead mobs. This Sentinel detects the creation and usage of such potions, cancels any effects, and tries to
    # delete the potions from the inventory and world on interaction.
    CreativeKillPotion:
      # Do you want to enable the CreativeKillPotion exploit detection?
      enabled: true
      # What commands will be executed if an illegal potion is detected.
      # Automatic banning can be considered.
      commands:
        - "kick {player} Illegal Potion."

    # Various cheat clients allow a player to attack themselves, giving them an advantage in some scenarios, like
    # abusing a game's death mechanics.
    SelfDamage:
      # Do you want to enable the SelfDamage exploit detection?
      enabled: true
      # What commands will be executed if a self-attack is detected.
      # Automatic banning can be considered.
      commands:
        - "kick {player} Self damage."

    # This sentinel detects all potions that have one of the following features:
    # + Blindness for at least min_effect_time seconds
    # + Nausea for at least min_effect_time seconds
    # Such potions are not available by brewing and unless a core feature on your server, should not be available to
    # your players due to the detrimental effect on a player's experience. This detects the creation and usage of such
    # potions, cancels any effects, and tries to delete the potions from the inventory.
    TrollPotion:
      # Do you want to enable the TrollPotion exploit detection?
      enabled: true
      # The minimum time in seconds of the effects to trigger a detection.
      # Measured in seconds, must be greater than or equal to 0.
      min_effect_time: 500
      # What commands will be executed if an illegal potion is detected.
      # Automatic banning can be considered.
      commands:
        - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} had a troll potion"

  # A popular PvP modification to enhance the sprinting behaviour (ToggleSprint)
  BetterSprinting:
    # Do you want to enable BetterSprinting?
    enabled: true
    # This mod provides a method to disable parts of it.
    disable:
      # The mod provides a method to disable it.
      # Other options will be ignored if this is set to true.
      # If you want to completely disable the mod set this to true.
      general: false
      # This gives players a configurable speed boost when flying in creative or survival mode.
      survival_fly_boost: true
      enable_all_dirs: true
    # What commands will be executed if the mod is detected.
    commands:
      - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} uses BetterSprinting"

  # A popular pvp mod that can display a HUD, capes and has multiple social features.
  5Zig:
    # Do you want to enable 5Zig?
    enabled: false
    # What commands will be executed if the mod is detected.
    commands:
      - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} uses 5Zig"

  # This covers the latest version of LabyMod.
  # A very popular PvP modification similar to 5zig but with more features and TS3 support
  #
  # If enabled Sentinel will override the config options of the LabyModAPI plugin.
  LabyMod:
    # Do you want to enable LabyMod-Sentinel?
    enabled: false
    # This allows you to show LabyMod players a banner image in their tablist.
    # As specified in their documentation (https://docs.labymod.net/pages/server/displays/tablist/)
    # the image ratio must be 5:1 and the recommended resolution is 1280x256 pixels.
    TablistBanner:
      # Do you want to enable LabyModServerInfo?
      enabled: false
      # Please specify the URL to get the image here.
      url: ""
    # This setting determines whether the LabyMod-Voicechat is allowed on your server (true means allowed).
    Voicechat: true
    # This mod provides a method to disable parts of it.
    # Set the corresponding value to true if you want to block a part of the mod
    disable:
      # Fixes a rendering bug in minecraft with fast lava placement (ghost blocks)
      # This can be seen as semi-cheat-like if lava plays a major role on your server
      improved_lava: false
      # Fixes a rendering bug in minecraft with fast head movement which makes the crosshair fall slightly behind
      # This can be seen as semi-cheat-like as it grants a minor aiming advantage in fights.
      crosshair_sync: false
      # This fixes some inventory bugs to improved pot and soup refill.
      # This is regarded as cheat-like behaviour as it grants a major reliability bonus.
      refill_fix: true
      # General GUI adjustments inside the mod, such as position, direction and current system time
      # Not recommended to disable as it is a purely cosmetic feature
      gui_all: false
      # This renders the potion effect of the player on the display in form of a HUD
      gui_potion_effects: false
      # This displays the current armour of a player (including durability) in a HUD
      gui_armor_hud: false
      # This allows the client to additionally render the current weapon as well as the number of arrows in one's inventory.
      gui_item_hud: false
      # Brings back old building animations
      # Not recommended to disable as it is a purely cosmetic feature
      blockbuild: false
      # Various cosmetic features
      tags: false
      # Adds additional features such as different channels or filters to the chat (only clientsided)
      # This is semi-cheat-like behaviour as chat also contains an AutoText module (write predefined messages instantly)
      # as well as special characters (chat-filter bypass).
      chat: false
      # Purely cosmetic feature to switch back to the old animations of MC 1.7
      # Not recommended to disable as it is a purely cosmetic feature
      animations: false
      # This renders the saturation of a player additional to the current food.
      # Even though this is sometimes considered as an unfair advantage it is often just handy information
      # which is not really affecting the gameplay.
      saturation_bar: false
    # What commands will be executed if the mod is detected.
    commands:
      - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} uses LabyMod"

  # A mod that lets you display (clientside) holograms to improve building, but also has
  # a module to download worlds.
  #
  # The mod itself is quite old and therefore this Sentinel only works on minecraft versions 1.8 - 1.12.
  Schematica:
    # Do you want to enable Schematica-Sentinel?
    enabled: false
    # This mod provides a method to disable parts of it.
    # Set the corresponding value to true if you want to block a part of the mod
    disable:
      # Automatically builds based on a schematic.
      # This is also called a building-bot sometimes.
      printer: true
      # This saves a part of the world as a schematic for later use thus being a small version
      # of the full WorldDownloader mod.
      save: true
      # This allows to load a schematic on your server for printing or a hologram.
      load: false
    # What commands will be executed if the mod is detected.
    commands:
      - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} uses Schematica"

  # Vape is a very popular ghost-client, often seen in ranked pvp gameplay and optimized to be especially hard to find
  # in screenshares
  # This will only detect some cracked versions of the client.
  #
  # This Sentinel is not compatible with minecraft 1.13+ as the cracked client is version 1.8 and there have been
  # large API changes in 1.13.
  Vape:
    # Do you want to enable Vape-Sentinel?
    enabled: true
    # What commands will be executed if the mod is detected.
    # Automatic banning can be considered.
    commands:
      - "kick {player} Illegal client modification"

  # WorldDownloader is a popular modification to get the maps of a server
  WorldDownloader:
    # Do you want to enable WorldDownloader-Sentinel?
    enabled: false
    # This mod provides a method to disable parts of it.
    disable:
      # The mod provides a method to disable it.
      # Other options will be ignored if this is set to true.
      # If you want to completely disable the mod set this to true.
      general: true
      # This will disable future features of the mod not yet included in the server api.
      # It is recommended to set this to true.
      future: true
      # This indicates the distance from the player chunks can be saved from.
      # -1 means allowing all distances. This is a square distance, not a circle or a diamond.
      # Only applies if chunk caching is disabled.
      save_radius: 0
      # This will disable chunk caching which allows the player to save all chunks he has moved through.
      chunk_caching: true
      # This will disable saving entities.
      entity_saving: true
      # This will disable saving tile entities.
      tile_entity_saving: true
      # This will disable saving containers and their inventories.
      # If tile_entity_saving is disabled, this has no effect.
      container_saving: true
    # What commands will be executed if the mod is detected.
    commands:
      - "kick {player} WorldDownloader"

  # Here you can easily define your own simple Sentinel checks.
  # These checks are automatically generated, please make sure that you use NO SPECIAL CHARACTERS and NO DUPLICATE
  # NAMES to define a check (special characters are obviously fine as channel names and in "contains").
  #
  # Simple step-by-step manual to create your own check:
  # (1) Copy the section of PXMod
  # (2) Rename the section from PXMod to <NAME_OF_YOUR_CUSTOM_CHECK>
  # (3) Add the channels you want to listen to in incoming channels (e.g. minecraft:brand)
  #     AACAdditionPro will automatically try to generate the legacy channel name and listen for that as well (in this
  #     case MC|Brand). Generally, if you know the legacy name, add it as well and AACAdditionPro will automatically
  #     choose the correct one for your server version.
  # (4) If needed, define what the message need to contain to trigger the check. E.g. if you are listening to
  #     minecraft:brand and superspecialmod:version to detect a mod you could define containsAny as:
  #     containsAll: ["SSM", "ssm"]
  #     Note: that is a purely fictional example, the channels and messages will differ for each mod, and many mods
  #     will not send any message (especially if they are used to cheat).
  # (5) Define the commands you want to execute when the mod is detected. The commands are executed exactly once right
  #     after player join. This allows you to e.g. disallow a certain mod on your server by kicking players on join.
  Custom:
    # This will detect Forge.
    Forge:
      # Do you want to enable Forge-Sentinel?
      enabled: false
      # The channels AACAdditionPro will listen to.
      incoming_channels:
        - "minecraft:brand"
        - "MC|Brand"
      # All strings in this list will need to be included in the message sent in the channels above to trigger the
      # commands. An empty list defined as [ ] means any message is accepted by containsAll.
      containsAll: [ ]
      # At least one string in this list will need to be included in the message sent in the channels above to trigger
      # the commands. An empty list defined as [ ] means any message is accepted by containsAny.
      containsAny: [ "forge", "fml" ]
      # What commands will be executed if the mod is detected.
      commands:
        - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} uses Forge"

    # This will detect Liteloader.
    LiteLoader:
      # Do you want to enable LiteLoader-Sentinel?
      enabled: false
      # The channels AACAdditionPro will listen to.
      incoming_channels:
        - "minecraft:brand"
        - "MC|Brand"
      # All strings in this list will need to be included in the message sent in the channels above to trigger the
      # commands. An empty list defined as [ ] means any message is accepted by containsAll.
      containsAll: [ ]
      # At least one string in this list will need to be included in the message sent in the channels above to trigger
      # the commands. An empty list defined as [ ] means any message is accepted by containsAny.
      containsAny: [ "LiteLoader", "Liteloader" ]
      # What commands will be executed if the mod is detected.
      commands:
        - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} uses LiteLoader"

    # This will detect PixelClient.
    PixelClient:
      # Do you want to enable PixelClient-Sentinel?
      enabled: false
      # The channels AACAdditionPro will listen to.
      incoming_channels:
        - "mc:pixel"
        - "MC|PIXEL"
      # All strings in this list will need to be included in the message sent in the channels above to trigger the
      # commands. An empty list defined as [ ] means any message is accepted by containsAll.
      containsAll: [ ]
      # At least one string in this list will need to be included in the message sent in the channels above to trigger
      # the commands. An empty list defined as [ ] means any message is accepted by containsAny.
      containsAny: [ ]
      # What commands will be executed if the mod is detected.
      commands:
        - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} uses PixelClient"

    # This will detect PXMod.
    PXMod:
      # Do you want to enable PXMod-Sentinel?
      enabled: false
      # The channels AACAdditionPro will listen to.
      incoming_channels:
        - "px:version"
        - "PX|Version"
      # All strings in this list will need to be included in the message sent in the channels above to trigger the
      # commands. An empty list defined as [ ] means any message is accepted by containsAll.
      containsAll: [ ]
      # At least one string in this list will need to be included in the message sent in the channels above to trigger
      # the commands. An empty list defined as [ ] means any message is accepted by containsAny.
      containsAny: [ ]
      # What commands will be executed if the mod is detected.
      commands:
        - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} uses PXMod"

    # This will detect Rift.
    Rift:
      # Do you want to enable Rift-Sentinel?
      enabled: false
      # The channels AACAdditionPro will listen to.
      incoming_channels:
        - "minecraft:brand"
        - "MC|Brand"
      # All strings in this list will need to be included in the message sent in the channels above to trigger the
      # commands. An empty list defined as [ ] means any message is accepted by containsAll.
      containsAll: [ ]
      # At least one string in this list will need to be included in the message sent in the channels above to trigger
      # the commands. An empty list defined as [ ] means any message is accepted by containsAny.
      containsAny: [ "rift" ]
      # What commands will be executed if the mod is detected.
      commands:
        - "<YOUR_STAFFCHAT_COMMAND> {player} in {world} uses Rift"

    # This will detect Winterware.
    Winterware:
      # Do you want to enable Winterware-Sentinel?
      enabled: true
      # The channels AACAdditionPro will listen to.
      incoming_channels:
        - "lc:brand"
        - "LC|Brand"
      # All strings in this list will need to be included in the message sent in the channels above to trigger the
      # commands. An empty list defined as [ ] means any message is accepted by containsAll.
      containsAll: [ ]
      # At least one string in this list will need to be included in the message sent in the channels above to trigger
      # the commands. An empty list defined as [ ] means any message is accepted by containsAny.
      containsAny: [ ]
      # What commands will be executed if the mod is detected.
      # Automatic banning can be considered.
      commands:
        - "kick {player} Illegal Client Modifications"
# ------------------------------------------------------------------------------------------------------------------- #
#                                               ___      _                                                            #
#                                              |   \ ___| |__ _  _ __ _                                               #
#                                              | |) / -_) '_ \ || / _` |                                              #
#                                              |___/\___|_.__/\_,_\__, |                                              #
#                                                                 |___/                                               #
#                                                                                                                     #
# ------------------------------------------------------------------------------------------------------------------- #


# If this option is active and AAC is installed AACAdditionPro will not execute any commands specified above and instead
# hooks the AAC feature system to allow you to specify punishments via the AAC config.
# This way, AACAdditionPro's checks will also appear in AAC's status messages.
#
# When a module does not have the key aac_score_multiplier, it behaves like an implicit
# aac_score_multiplier: 1.0
# You can use this to change the multiplier of checks.
UseAACFeatureSystem: true

# Allows defining where to send debug messages to. Please note that when reporting bugs, you will need to provide the
# debug file of AACAdditionPro, therefore this setting is enabled here.
Debug:
  # Do you want AACAdditionPro to log into a log-file?
  file: true
  # Should players be able to get debug messages if they have the aacadditionpro.debug permission
  # Players can toggle the debug output with the command /aacadditionpro debug
  players: false
  # Should the debug output be logged in the console (very spammy, only recommended for testing purposes)
  console: false
