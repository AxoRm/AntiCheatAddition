package de.photon.anticheataddition.modules.sentinel.exploits;

import de.photon.anticheataddition.ServerVersion;
import de.photon.anticheataddition.modules.ModuleLoader;
import de.photon.anticheataddition.util.datastructure.SetUtil;
import de.photon.anticheataddition.util.minecraft.world.MaterialUtil;
import org.bukkit.Material;
import org.bukkit.Tag;
import org.bukkit.inventory.ItemStack;
import org.jetbrains.annotations.NotNull;

import java.util.Set;
import java.util.stream.Stream;

public class CrashContainer extends IllegalItemSentinel
{
    public static final CrashContainer INSTANCE = new CrashContainer();

    private static final Set<Material> AFFECTED_CONTAINERS = Stream.of(MaterialUtil.ofTags(Tag.ITEMS_CHEST_BOATS), MaterialUtil.FREE_SPACE_CONTAINERS)
                                                                   .flatMap(Set::stream)
                                                                   .collect(SetUtil.toImmutableEnumSet());

    private final int maxMetaLength = loadInt(".max_meta_length", 100000);

    protected CrashContainer()
    {
        super("Exploits.CrashContainer");
    }

    @Override
    protected boolean isIllegalStack(@NotNull ItemStack stack)
    {
        //noinspection DataFlowIssue
        return AFFECTED_CONTAINERS.contains(stack.getType()) &&
               stack.hasItemMeta() &&
               stack.getItemMeta().getAsString().length() > maxMetaLength;
    }

    @Override
    protected ModuleLoader createModuleLoader()
    {
        return ModuleLoader.builder(this)
                           // Changes to metas and materials.
                           .setAllowedServerVersions(ServerVersion.MC119.getSupVersionsFrom())
                           .build();
    }
}
