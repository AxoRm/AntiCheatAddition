package de.photon.anticheataddition.modules.sentinel.exploits;

import de.photon.anticheataddition.ServerVersion;
import de.photon.anticheataddition.modules.ModuleLoader;
import org.bukkit.event.EventHandler;
import org.bukkit.event.entity.LingeringPotionSplashEvent;
import org.bukkit.event.entity.PotionSplashEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.jetbrains.annotations.NotNull;

public class CreativeKillPotionSentinel extends IllegalItemSentinel
{
    public CreativeKillPotionSentinel()
    {
        super("Exploits.CreativeKillPotion");
    }

    private static boolean isCreativeKillPotion(PotionEffect effect)
    {
        // Important: Use equals here to check for the PotionEffectType, as that is NOT an Enum!
        return (effect.getType().equals(PotionEffectType.HEAL) || effect.getType().equals(PotionEffectType.HARM)) && effect.getAmplifier() > 120;
    }

    @Override
    boolean isIllegalStack(@NotNull ItemStack stack)
    {
        return IllegalItemSentinel.getCustomPotionEffects(stack).stream().anyMatch(CreativeKillPotionSentinel::isCreativeKillPotion);
    }

    @EventHandler(ignoreCancelled = true)
    public void onPotionSplash(PotionSplashEvent event)
    {
        // Disable any thrown potions.
        if (event.getPotion().getEffects().stream().anyMatch(CreativeKillPotionSentinel::isCreativeKillPotion)) event.setCancelled(true);
    }

    @EventHandler(ignoreCancelled = true)
    public void onLingeringPotionSplash(LingeringPotionSplashEvent event)
    {
        // Disable any thrown potions.
        if (event.getEntity().getEffects().stream().anyMatch(CreativeKillPotionSentinel::isCreativeKillPotion)) event.setCancelled(true);
    }

    @Override
    protected ModuleLoader createModuleLoader()
    {
        return ModuleLoader.builder(this)
                           // Potions are much different in 1.8.8
                           .setAllowedServerVersions(ServerVersion.NON_188_VERSIONS)
                           .build();
    }
}
