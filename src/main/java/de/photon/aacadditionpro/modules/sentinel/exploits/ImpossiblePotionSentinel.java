package de.photon.aacadditionpro.modules.sentinel.exploits;

import de.photon.aacadditionpro.ServerVersion;
import de.photon.aacadditionpro.modules.ModuleLoader;
import de.photon.aacadditionpro.modules.sentinel.SentinelModule;
import de.photon.aacadditionpro.user.User;
import lombok.val;
import org.bukkit.Material;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.PotionSplashEvent;
import org.bukkit.event.inventory.InventoryCreativeEvent;
import org.bukkit.inventory.meta.PotionMeta;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;

public class ImpossiblePotionSentinel extends SentinelModule implements Listener
{
    public ImpossiblePotionSentinel()
    {
        super("Exploits.ImpossiblePotion");
    }

    @Override
    protected ModuleLoader createModuleLoader()
    {
        return ModuleLoader.builder(this)
                           // Potions are much different in 1.8.8
                           .addAllowedServerVersions(ServerVersion.NON_188_VERSIONS)
                           .build();
    }

    @EventHandler(ignoreCancelled = true)
    public void onInventoryCreative(InventoryCreativeEvent event)
    {
        val user = User.getUser(event.getWhoClicked().getUniqueId());
        if (User.isUserInvalid(user, this)) return;

        if ((event.getCursor().getType() == Material.POTION || event.getCursor().getType() == Material.SPLASH_POTION) &&
            event.getCursor().hasItemMeta() &&
            event.getCursor().getItemMeta() instanceof PotionMeta &&
            ((PotionMeta) event.getCursor().getItemMeta()).getCustomEffects().stream().anyMatch(this::isImpossiblePotion))
        {
            // Try to remove the ItemStack, note that this might remove other potions as well.
            user.getPlayer().getInventory().remove(event.getCursor());
            detection(user.getPlayer());
        }
    }

    @EventHandler(ignoreCancelled = true)
    public void onPotionSplash(PotionSplashEvent event)
    {
        // Disable any thrown potions.
        if (event.getPotion().getEffects().stream().anyMatch(this::isImpossiblePotion)) event.setCancelled(true);
    }

    private boolean isImpossiblePotion(PotionEffect effect)
    {
        return effect.getType() == PotionEffectType.HEAL && effect.getAmplifier() > 120;
    }
}
